# -*- mode: python -*-

Import("env")

env.InjectThirdPartyIncludePaths('asio')

env.Library(target='remote_command',
            source=[
                'remote_command_request.cpp',
                'remote_command_response.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/rpc/metadata',
                '$BUILD_DIR/mongo/util/net/hostandport',
            ])

env.Library(target='task_executor_interface',
            source=[
                'task_executor.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/base',
                'remote_command',
            ])

env.Library(target='network_interface',
            source=['network_interface.cpp',],
            LIBDEPS=[
                'task_executor_interface',
            ])

env.Library(target='network_interface_impl', # TODO: rename to thread_pool_network_interface
            source=['network_interface_impl.cpp',],
            LIBDEPS=[
                '$BUILD_DIR/mongo/client/remote_command_runner_impl',
                '$BUILD_DIR/mongo/util/concurrency/thread_pool',
                'network_interface',
                'task_executor_interface',
            ])

env.Library('network_interface_mock',
            [
                'network_interface_mock.cpp',
                'thread_pool_mock.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/base',
                '$BUILD_DIR/mongo/rpc/metadata',
                '$BUILD_DIR/mongo/util/net/network',
                'network_interface',
                'task_executor_interface',
            ])

env.CppUnitTest(
    target='network_interface_mock_test',
    source=[
        'network_interface_mock_test.cpp'
    ],
    LIBDEPS=[
        'network_interface_mock',
    ],
)

env.Library(target='network_test_env',
            source=['network_test_env.cpp',],
            LIBDEPS=[
                'network_interface_mock',
                'task_executor_interface',
                '$BUILD_DIR/mongo/db/coredb',
            ])

env.Library(
    target='network_interface_asio',
    source=[
        'async_mock_stream_factory.cpp',
        'async_secure_stream.cpp',
        'async_secure_stream_factory.cpp',
        'async_stream.cpp',
        'async_stream_factory.cpp',
        'network_interface_asio.cpp',
        'network_interface_asio_auth.cpp',
        'network_interface_asio_command.cpp',
        'network_interface_asio_connect.cpp',
        'network_interface_asio_operation.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/client/authentication',
        '$BUILD_DIR/mongo/db/auth/authcommon',
        '$BUILD_DIR/mongo/rpc/rpc',
        '$BUILD_DIR/third_party/shim_asio',
        'network_interface',
        'task_executor_interface',
    ])

env.CppUnitTest(
    target='network_interface_asio_test',
    source=[
        'network_interface_asio_test.cpp',
    ],
    LIBDEPS=[
        'network_interface_asio',
    ],
)

env.CppIntegrationTest(
    target='network_interface_asio_integration_test',
    source=[
        'network_interface_asio_integration_test.cpp',
    ],
    LIBDEPS=[
        'network_interface_asio',
        '$BUILD_DIR/mongo/rpc/command_status',
    ],
)

env.Library(
    target='network_interface_factory',
    source=[
        'network_interface_factory.cpp',
    ],
    LIBDEPS=[
        'network_interface',
        'network_interface_asio',
        'network_interface_impl',
    ])

env.Library(
    target='task_executor_test_fixture',
    source=[
        'task_executor_test_common.cpp',
        'task_executor_test_fixture.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/unittest/unittest',
        'network_interface_mock',
        'task_executor_interface',
    ]
)

env.Library(
    target='thread_pool_task_executor',
    source=[
        'thread_pool_task_executor.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/util/concurrency/thread_pool',
        'task_executor_interface',
    ]
)

env.Library(
    target='thread_pool_task_executor_test_fixture',
    source=[
        'thread_pool_task_executor_test_fixture.cpp',
        ],
    LIBDEPS=[
        'thread_pool_task_executor',
        'task_executor_test_fixture',
    ]
)

env.CppUnitTest(
    target='thread_pool_task_executor_test',
    source=[
        'thread_pool_task_executor_test.cpp',
    ],
    LIBDEPS=[
        'thread_pool_task_executor_test_fixture',
    ]
)
