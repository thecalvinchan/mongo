#####################################################
#               A note on expansions                #
#####################################################

# Expansions usually appear in the form ${key|default}
# If 'key' is found in the executor's map of currently known
# expansions, the corresponding value is used. If the key can
# not be found, the default is used.
#
# Arbitrary expansions can be specified in the YAML cofiguration
# files in the following places:
# - The 'expansions' field for buildvariants (branch file)
# - The 'expansions' field for distros (distros file)
#
# A number of 'built-in' expansions are also available for use; these include:
# - environment variables available on the host machine
# - 'workdir' (references the executor's work directory).
# - 'task_id' (references the task id of the task the executor is working on).
# - 'build_variant' (references the executing task's buildvariant).
# - 'config_root' (references the root directory for the executor's configuration artifacts).

stepback: true

## Some variables for convenience:
variables:

# Used for tests that invoke resmoke.py and require no additional setup.
- &task_template
  name: template
  depends_on:
  - name: compile
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --help
      run_multiple_jobs: false

- &debug_symbol_variants
  - enterprise-linux-64-amazon-ami
  - enterprise-rhel-57-64-bit
  - enterprise-rhel-62-64-bit
  - enterprise-rhel-70-64-bit
  - enterprise-suse11-64
  - enterprise-ubuntu1204-64
  - enterprise-ubuntu1404-64
  - enterprise-debian71-64
  - linux-32
  - linux-64
  - amazon
  - rhel55
  - rhel62
  - rhel70
  - suse11
  - ubuntu1204
  - ubuntu1404
  - debian71
  - solaris-64-bit
  - osx

#######################################
#            Functions                #
#######################################

functions:

  "fetch artifacts" : &fetch_artifacts
    command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: mongodb-mongo-master/${build_variant}/${revision}/artifacts/${build_id}.tgz
      bucket: mciuploads
      extract_to: src

  "fetch binaries" : &fetch_binaries
    command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: mongodb-mongo-master/${build_variant}/${revision}/binaries/mongo-${build_id}.${ext|tgz}
      bucket: mciuploads
      local_file: src/mongo-binaries.tgz

  "extract binaries" : &extract_binaries
    command: shell.exec
    params:
      working_dir: src
      script: |
        ${decompress|unzip} mongo-binaries.tgz

  "get buildnumber" : &get_buildnumber
    command: keyval.inc
    params:
      key: "${build_variant}_master"
      destination: "builder_num"

  "setup credentials" : &setup_credentials
    command: shell.exec
    params:
      working_dir: src
      silent: true
      script: |
        cat > mci.buildlogger <<END_OF_CREDS
        slavename='${slave}'
        passwd='${passwd}'
        builder='MCI_${build_variant}'
        build_num=${builder_num}
        build_phase='${task_name}_${execution}'
        END_OF_CREDS

  "upload debugsymbols" :
    command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: src/mongo-debugsymbols.tgz
      remote_file: mongodb-mongo-master/${build_variant}/${revision}/debugsymbols/debugsymbols-${build_id}.${ext|tgz}
      bucket: mciuploads
      permissions: public-read
      content_type: ${content_type|application/x-gzip}
      build_variants:
        *debug_symbol_variants

  "fetch debugsymbols archive" :
    command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: mongodb-mongo-master/${build_variant}/${revision}/debugsymbols/debugsymbols-${build_id}.${ext|tgz}
      bucket: mciuploads
      local_file: src/mongo-debugsymbols.tgz
      build_variants:
        *debug_symbol_variants

  "build rocksdb" :
    command: shell.exec
    params:
      script: |
        set -o errexit
        set -o verbose
        if [ "${build_rocksdb|}" = "true" ]; then
        rm -rf rocksdb
        git clone https://github.com/facebook/rocksdb.git
        cd rocksdb
        make static_lib
        fi

  "build new tools" :
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o verbose

        # create the target directory for the binaries
        mkdir -p src/mongo-tools

        # clone into a different path so the binaries and package directory
        # names do not conflict
        ${gitvars} git clone https://github.com/mongodb/mongo-tools.git src/mongo-tools-repo
        cd src/mongo-tools-repo

        # make sure newlines in the scripts are handled correctly by windows
        if [ "Windows_NT" = "$OS" ]; then
            set -o igncr
        fi;

        git checkout r3.1.6
        . ./${set_tools_gopath|set_gopath.sh}

        # In RHEL 5.5, /usr/bin/ld can't handle --build-id parameters, so
        # use a wrapper if it's present on the system
        #
        if [ -d /opt/ldwrapper/bin ]
        then
          export PATH=/opt/ldwrapper/bin:$PATH
        fi

        for i in bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop mongooplog; do
             ${gorootvars} go build -ldflags "-X github.com/mongodb/mongo-tools/common/options.Gitspec $(git rev-parse HEAD)" ${tooltags|} -o "../mongo-tools/$i${exe|}" $i/main/$i.go
             echo $i;
        done
        exit 0

  "do setup" :
  - *fetch_artifacts
  - *fetch_binaries
  - *extract_binaries
  - *get_buildnumber
  - *setup_credentials

  "run tests" :
    command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        cp mongodb*/bin/* .
        if [ ${run_multiple_jobs|false} = true ]; then
          ${asan_symbolizer} ${enable_lsan} ${python|python} buildscripts/resmoke.py ${resmoke_args} --jobs=${num_cores|1} ${test_flags} --log=buildlogger --reportFile=report.json
        else
          ${asan_symbolizer} ${enable_lsan} ${python|python} buildscripts/resmoke.py ${resmoke_args} --jobs=1 ${test_flags} --log=buildlogger --reportFile=report.json
        fi

pre:
  - command: shell.track
  - command: shell.exec
    params:
      silent: true
      script: |
        ${killall_mci|pkill -9 mongod; pkill -9 mongos; pkill -9 mongo; pkill -9 bsondump; pkill -9 mongoimport; pkill -9 mongoexport; pkill -9 mongodump; pkill -9 mongorestore; pkill -9 mongostat; pkill -9 mongofiles; pkill -9 mongooplog; pkill -9 mongotop; pkill -9 mongobridge; pkill -9 mongod-2.6; pkill -9 mongos-2.6; pkill -9 mongo-2.6; pkill -9 bsondump-2.6; pkill -9 mongoimport-2.6; pkill -9 mongoexport-2.6; pkill -9 mongodump-2.6; pkill -9 mongorestore-2.6; pkill -9 mongostat-2.6; pkill -9 mongofiles-2.6; pkill -9 mongooplog-2.6; pkill -9 mongotop-2.6; pkill -9 mongobridge-2.6; pkill -9 mongod-2.4; pkill -9 mongos-2.4; pkill -9 mongo-2.4; pkill -9 bsondump-2.4; pkill -9 mongoimport-2.4; pkill -9 mongoexport-2.4; pkill -9 mongodump-2.4; pkill -9 mongorestore-2.4; pkill -9 mongostat-2.4; pkill -9 mongofiles-2.4; pkill -9 mongooplog-2.4; pkill -9 mongotop-2.4; pkill -9 resmoke.py; pkill -9 python; pkill -9 cl; pkill -9 lldb; pkill -9 lock_mgr_test; pkill -9 background_job_test; pkill -9 repl_coordinator_impl_heartbeat_test; pkill -9 repl_coordinator_impl_test} >/dev/null 2>&1
        rm -rf src /data/db/*
        exit 0

post:
  - command: attach.results
    params:
      file_location: src/report.json
  - command: shell.exec
    params:
      silent: true
      script: |
        ${killall_mci|pkill -9 mongod; pkill -9 mongos; pkill -9 mongo; pkill -9 bsondump; pkill -9 mongoimport; pkill -9 mongoexport; pkill -9 mongodump; pkill -9 mongorestore; pkill -9 mongostat; pkill -9 mongofiles; pkill -9 mongooplog; pkill -9 mongotop; pkill -9 mongobridge; pkill -9 mongod-2.6; pkill -9 mongos-2.6; pkill -9 mongo-2.6; pkill -9 bsondump-2.6; pkill -9 mongoimport-2.6; pkill -9 mongoexport-2.6; pkill -9 mongodump-2.6; pkill -9 mongorestore-2.6; pkill -9 mongostat-2.6; pkill -9 mongofiles-2.6; pkill -9 mongooplog-2.6; pkill -9 mongotop-2.6; pkill -9 mongobridge-2.6; pkill -9 mongod-2.4; pkill -9 mongos-2.4; pkill -9 mongo-2.4; pkill -9 bsondump-2.4; pkill -9 mongoimport-2.4; pkill -9 mongoexport-2.4; pkill -9 mongodump-2.4; pkill -9 mongorestore-2.4; pkill -9 mongostat-2.4; pkill -9 mongofiles-2.4; pkill -9 mongooplog-2.4; pkill -9 mongotop-2.4; pkill -9 resmoke.py; pkill -9 python; pkill -9 cl; pkill -9 lldb; pkill -9 lock_mgr_test; pkill -9 background_job_test; pkill -9 repl_coordinator_impl_heartbeat_test; pkill -9 repl_coordinator_impl_test} >/dev/null 2>&1
        exit 0
  - command: shell.cleanup

timeout:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        echo "Calling the hang analyzer..."
        PATH=/opt/mongodbtoolchain/bin:$PATH python buildscripts/hang_analyzer.py

#######################################
#               Tasks                 #
#######################################

tasks:

## compile ##
- name: compile
  depends_on: []
  commands:
    - command: git.get_project
      params:
        directory: src
    - command: git.apply_patch
      params:
        directory: src
    - func: "get buildnumber"
    - func: "setup credentials"
    - func: "build new tools" # noop if ${newtools} is not "true"
    - func: "build rocksdb" # noop if ${build_rocksdb} is not "true"
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          rm -rf ${install_directory|/data/mongo-install-directory}
          ${scons|scons} ${compile_flags|} --use-new-tools all dist dist-debugsymbols distsrc-${ext|tgz} ${msi_target|}

          ${python|python} buildscripts/generate_compile_expansions.py version.json | \
            tee compile_expansions.yml

          ${asan_symbolizer} ${enable_lsan} ${rlp_environment} ${python|python} buildscripts/resmoke.py --jobs=${num_jobs_unittests|1} --suites=unittests ${test_flags} --log=buildlogger --reportFile=report.json

          mv mongodb-src-*.${ext|tgz} distsrc.${ext|tgz}
          mv mongodb-*-debugsymbols.${ext|tgz} mongo-debugsymbols.tgz || true
          mv mongodb-*.${ext|tgz} mongodb-binaries.tgz

    - command: archive.targz_pack
      params:
        target: "artifacts.tgz"
        source_dir: "src"
        include:
          - "src/mongo/db/modules/enterprise/jstests/**"
          - "compile_expansions.yml"
          - "src/mongo/db/modules/subscription/jstests/**"
          - "src/mongo/db/modules/enterprise/docs/**"
          - "*.exe"
          - "jstests/**"
          - "./test*"
          - "./dbtest*"
          - "./mongobridge*"
          - "buildscripts/**"
          - "*Example"
          - "*Test"
          - "./**.pdb"
          - "./**.msi"
          - "./etc/*san.suppressions"
        exclude_files:
          - "*_test.pdb"
    - func: "upload debugsymbols"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongodb-binaries.tgz
        remote_file: mongodb-mongo-master/${build_variant}/${revision}/binaries/mongo-${build_id}.${ext|tgz}
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: Binaries
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: artifacts.tgz
        remote_file: mongodb-mongo-master/${build_variant}/${revision}/artifacts/${build_id}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/tar
        display_name: Artifacts
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/distsrc.${ext|tgz}
        remote_file: mongodb-mongo-master/${build_variant}/${revision}/sources/mongo-src-${build_id}.${ext|tgz}
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: Source tarball
        # We only need to upload the source tarball from one of the build variants
        # because it should be the same everywhere, so just use linux-64/windows-64-2k8.
        build_variants: [ linux-64, windows-64-2k8 ]

## lint ##
- name: lint
  depends_on: []
  commands:
    - command: git.get_project
      params:
        directory: src
    - command: git.apply_patch
      params:
        directory: src
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          ${scons|scons} ${compile_flags|} lint

## jstestfuzz ##
- name: jstestfuzz
  depends_on:
  - name: compile
  commands:
    - func: "do setup"
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          git clone git@github.com:10gen/jstestfuzz.git
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          curl --silent --max-time 600 http://boxes.10gen.com/build/node-v0.12.4-linux-x64.tar.gz --output node.tar.gz
          ${decompress} node.tar.gz
    - command: shell.exec
      params:
        working_dir: src/jstestfuzz
        script: |
          set -o errexit
          set -o verbose

          export PATH="$PATH":${workdir}/src/node-v0.12.4-linux-x64/bin

          # Create an output directory for the generated test cases and ensure it always contains at least one JS file
          # for resmoke to run so that glob expansion cannot result in an error.
          mkdir -p out
          touch out/dummy.js

          npm install || true
          npm start -- --jsTestsDir ../jstests || true
    - command: archive.targz_pack
      params:
        target: "jstests.tgz"
        source_dir: "src/jstestfuzz"
        include:
          - "out/*.js"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: jstests.tgz
        remote_file: mongodb-mongo-master/${build_variant}/${revision}/jstestfuzz/jstestfuzz-${build_id}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: Generated Tests
    - func: "run tests"
      vars:
        resmoke_args: --suites=jstestfuzz

## integration test suites ##

- <<: *task_template
  name: aggregation
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=aggregation --storageEngine=mmapv1

- <<: *task_template
  name: aggregation_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=aggregation --storageEngine=wiredTiger

- <<: *task_template
  name: aggregation_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=aggregation_auth

- <<: *task_template
  name: audit
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=audit --storageEngine=mmapv1

- <<: *task_template
  name: audit_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=audit --storageEngine=wiredTiger

- <<: *task_template
  name: auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=auth --storageEngine=mmapv1

- <<: *task_template
  name: auth_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=auth --storageEngine=wiredTiger

- <<: *task_template
  name: dbtest
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=dbtest --storageEngine=mmapv1

- <<: *task_template
  name: dbtest_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=dbtest --storageEngine=wiredTiger

- <<: *task_template
  name: disk
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=disk

- <<: *task_template
  name: durability
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=durability

- <<: *task_template
  name: dur_jscore_passthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=dur_jscore_passthrough

- <<: *task_template
  name: ese_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=ese --storageEngine=wiredTiger

- <<: *task_template
  name: failpoints
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=failpoints

- <<: *task_template
  name: failpoints_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=failpoints_auth

- <<: *task_template
  name: gle_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth --shellWriteMode=legacy --storageEngine=mmapv1

- <<: *task_template
  name: gle_auth_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth --shellWriteMode=legacy --storageEngine=wiredTiger

- <<: *task_template
  name: gle_auth_write_cmd
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args:  --suites=gle_auth --shellWriteMode=commands --storageEngine=mmapv1

- <<: *task_template
  name: gle_auth_write_cmd_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth --shellWriteMode=commands --storageEngine=wiredTiger

- <<: *task_template
  name: gle_auth_basics_passthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth_basics_passthrough --shellWriteMode=legacy --storageEngine=mmapv1

- <<: *task_template
  name: gle_auth_basics_passthrough_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth_basics_passthrough --shellWriteMode=legacy --storageEngine=wiredTiger

- <<: *task_template
  name: gle_auth_basics_passthrough_write_cmd
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth_basics_passthrough --shellWriteMode=commands --storageEngine=mmapv1

- <<: *task_template
  name: gle_auth_basics_passthrough_write_cmd_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=gle_auth_basics_passthrough --shellWriteMode=commands --storageEngine=wiredTiger

- <<: *task_template
  name: sharding_gle_auth_basics_passthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_gle_auth_basics_passthrough --shellWriteMode=legacy --storageEngine=mmapv1

- <<: *task_template
  name: sharding_gle_auth_basics_passthrough_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_gle_auth_basics_passthrough --shellWriteMode=legacy --storageEngine=wiredTiger

- <<: *task_template
  name: sharding_gle_auth_basics_passthrough_write_cmd
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_gle_auth_basics_passthrough --shellWriteMode=commands --storageEngine=mmapv1

- <<: *task_template
  name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_gle_auth_basics_passthrough --shellWriteMode=commands --storageEngine=wiredTiger

- <<: *task_template
  name: jsCore
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core --storageEngine=mmapv1
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core --storageEngine=wiredTiger
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_WT_ese
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_ese --storageEngine=wiredTiger

- <<: *task_template
  name: jsCore_compatibility
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core --shellWriteMode=compatibility --storageEngine=mmapv1
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_compatibility_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core --shellWriteMode=compatibility --storageEngine=wiredTiger
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_auth
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_op_query
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_op_query --storageEngine=mmapv1
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_op_query_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_op_query --storageEngine=wiredTiger
      run_multiple_jobs: true

- <<: *task_template
  name: inMemoryExperiment
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core --storageEngine=inMemoryExperiment
      run_multiple_jobs: true

- <<: *task_template
  name: jsCore_small_oplog
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_small_oplog --storageEngine=mmapv1

- <<: *task_template
  name: jsCore_small_oplog_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_small_oplog --storageEngine=wiredTiger

- <<: *task_template
  name: jsCore_small_oplog_rs
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_small_oplog_rs --storageEngine=mmapv1

- <<: *task_template
  name: jsCore_small_oplog_rs_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=core_small_oplog_rs --storageEngine=wiredTiger

- <<: *task_template
  name: mongosTest
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=mongos_test

- <<: *task_template
  name: mmap
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=mmap

- <<: *task_template
  name: multiversion
  commands:
  - func: "do setup"
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        cp mongodb*/bin/* .
        rm -rf /data/install /data/multiversion
        ${python|python} buildscripts/setup_multiversion_mongodb.py /data/install /data/multiversion "Linux/x86_64" "1.8" "2.0" "2.2" "2.4" "2.6" "3.0"
        PATH=$PATH:/data/multiversion ${asan_symbolizer} ${enable_lsan} ${python|python} buildscripts/resmoke.py --suites=multiversion ${test_flags} --log=buildlogger --reportFile=report.json

- <<: *task_template
  name: noPassthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=no_passthrough --storageEngine=mmapv1

- <<: *task_template
  name: noPassthrough_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=no_passthrough --storageEngine=wiredTiger

- <<: *task_template
  name: noPassthroughWithMongod
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=no_passthrough_with_mongod --storageEngine=mmapv1

- <<: *task_template
  name: noPassthroughWithMongod_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=no_passthrough_with_mongod --storageEngine=wiredTiger

- <<: *task_template
  name: bulk_gle_passthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=bulk_gle_passthrough --storageEngine=mmapv1

- <<: *task_template
  name: bulk_gle_passthrough_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=bulk_gle_passthrough --storageEngine=wiredTiger

- <<: *task_template
  name: slow1
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=slow1 --storageEngine=mmapv1

- <<: *task_template
  name: slow1_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=slow1 --storageEngine=wiredTiger

- <<: *task_template
  name: slow2
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=slow2 --storageEngine=mmapv1

- <<: *task_template
  name: slow2_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=slow2 --storageEngine=wiredTiger

- <<: *task_template
  name: sharding_jscore_passthrough
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_jscore_passthrough --storageEngine=mmapv1

- <<: *task_template
  name: sharding_jscore_passthrough_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_jscore_passthrough --storageEngine=wiredTiger

- <<: *task_template
  name: parallel
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=parallel --storageEngine=mmapv1

- <<: *task_template
  name: parallel_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=parallel --storageEngine=wiredTiger

- <<: *task_template
  name: parallel_compatibility
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=parallel --shellWriteMode=compatibility --storageEngine=mmapv1

- <<: *task_template
  name: parallel_compatibility_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=parallel --shellWriteMode=compatibility --storageEngine=wiredTiger

- <<: *task_template
  name: concurrency
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency --storageEngine=mmapv1

- <<: *task_template
  name: concurrency_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency --storageEngine=wiredTiger

- <<: *task_template
  name: concurrency_replication
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency_replication --storageEngine=mmapv1

- <<: *task_template
  name: concurrency_replication_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency_replication --storageEngine=wiredTiger

- <<: *task_template
  name: concurrency_sharded
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency_sharded --storageEngine=mmapv1

- <<: *task_template
  name: concurrency_sharded_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=concurrency_sharded --storageEngine=wiredTiger

- <<: *task_template
  name: rlp
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=rlp --storageEngine=mmapv1

- <<: *task_template
  name: rlp_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=rlp --storageEngine=wiredTiger

- <<: *task_template
  name: replicasets
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replica_sets --storageEngine=mmapv1

- <<: *task_template
  name: replicasets_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replica_sets --storageEngine=wiredTiger

- <<: *task_template
  name: replica_sets_WT_ese
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replica_sets_ese --storageEngine=wiredTiger

- <<: *task_template
  name: replicasets_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replica_sets_auth

- <<: *task_template
  name: replication
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replication --storageEngine=mmapv1

- <<: *task_template
  name: replication_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replication --storageEngine=wiredTiger

- <<: *task_template
  name: replication_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=replication_auth

- <<: *task_template
  name: sasl
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sasl

- <<: *task_template
  name: sharding
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding --storageEngine=mmapv1

- <<: *task_template
  name: sharding_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding --storageEngine=wiredTiger

- <<: *task_template
  name: sharding_WT_ese
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_ese --storageEngine=wiredTiger

- <<: *task_template
  name: sharding_auth
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_auth

- <<: *task_template
  name: sharding_legacy
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=sharding_legacy

- <<: *task_template
  name: snmp
  commands:
  - func: "do setup"
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        cp mongodb*/bin/* .
        mkdir -p snmpconf
        cp -f src/mongo/db/modules/enterprise/docs/mongod.conf.master snmpconf/mongod.conf
        SNMPCONFPATH=snmpconf ${asan_symbolizer} ${enable_lsan} ${python|python} buildscripts/resmoke.py --suites=snmp --storageEngine=mmapv1 ${test_flags} --log=buildlogger --reportFile=report.json

- <<: *task_template
  name: snmp_WT
  commands:
  - func: "do setup"
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        cp mongodb*/bin/* .
        mkdir -p snmpconf
        cp -f src/mongo/db/modules/enterprise/docs/mongod.conf.master snmpconf/mongod.conf
        SNMPCONFPATH=snmpconf ${asan_symbolizer} ${enable_lsan} ${python|python} buildscripts/resmoke.py --suites=snmp --storageEngine=wiredTiger ${test_flags} --log=buildlogger --reportFile=report.json

- <<: *task_template
  name: ssl
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=ssl

- <<: *task_template
  name: sslSpecial
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=ssl_special

- <<: *task_template
  name: tool
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=tool --storageEngine=mmapv1

- <<: *task_template
  name: tool_WT
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --suites=tool --storageEngine=wiredTiger

- name: push
  depends_on:
  - name: "*"
  stepback: false
  commands:
    - func: "fetch artifacts"
    - func: "fetch binaries"
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: mongodb-mongo-master/${build_variant}/${revision}/sources/mongo-src-${build_id}.${ext|tgz}
        bucket: mciuploads
        local_file: src/distsrc.${ext|tgz}
        build_variants: [ linux-64, windows-64-2k8 ]
    - command: expansions.update
      params:
        file: src/compile_expansions.yml
    - func: "fetch debugsymbols archive"
    - command: shell.exec
      params:
        working_dir: src
        silent: true
        script: |
          set -o errexit
          echo "${signing_auth_token}" > signing_auth_token
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          mv mongo-binaries.tgz mongodb-binaries.${ext|tgz}
          mv mongo-debugsymbols.tgz debugsymbols-*.${ext|tgz} || true
          cp mongodb-*.${ext|tgz} mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}
          cp debugsymbols-*.${ext|tgz} mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz} || true
          mv distsrc.${ext|tgz} mongodb-src-${src_suffix}.${ext|tar.gz} || true
          /usr/bin/find build/ -type f | grep msi$ | xargs -I original_filename cp original_filename mongodb-win32-${push_arch}-${suffix}.msi || true

          notary-client.py --key-name "${signing_key_name}" --auth-token-file ./signing_auth_token --comment "MCI Automatic Signing ${revision} - ${build_variant} - ${branch_name}" --notary-url http://notary-service.build.10gen.cc:5000 --skip-missing mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz} mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz} mongodb-win32-${push_arch}-${suffix}.msi mongodb-src-${src_suffix}.${ext|tar.gz}
          rm signing_auth_token

    # Put the binaries tarball/zipfile
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}
    # Put the source tarball
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-src-${src_suffix}.${ext|tar.gz}
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}
        build_variants: [ linux-64, windows-64-2k8 ]

    # Put the debug symbols
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        aws_key: ${aws_key}
        build_variants: *debug_symbol_variants
        permissions: public-read
        local_file: src/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}
        bucket: build-push-testing
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}

    # Put the binaries tarball signature
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sig
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sig

    # Put the source tarball signature
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-src-${src_suffix}.${ext|tar.gz}.sig
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sig
        build_variants: [ linux-64, windows-64-2k8 ]

    # Put the debug symbols signature
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        aws_key: ${aws_key}
        build_variants: *debug_symbol_variants
        permissions: public-read
        local_file: src/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sig
        bucket: build-push-testing
        content_type: ${content_type|application/x-gzip}
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sig

    # Put the signed MSI file
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        permissions: public-read
        build_variants: ["enterprise-windows-64", "windows-64", "windows-64-2k8", "windows-64-2k8-ssl", "windows-32"]
        local_file: src/mongodb-win32-${push_arch}-${suffix}-signed.msi
        bucket: build-push-testing
        content_type: application/x-msi
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi

    # Put the binaries tarball sha1
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sha1
        aws_key: ${aws_key}
        permissions: public-read
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sha1

    # Put the source tarball sha1
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-src-${src_suffix}.${ext|tar.gz}.sha1
        aws_key: ${aws_key}
        permissions: public-read
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sha1
        build_variants: [ linux-64, windows-64-2k8 ]

    # Put the debug symbols sha1
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        aws_key: ${aws_key}
        build_variants: *debug_symbol_variants
        permissions: public-read
        local_file: src/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sha1
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sha1

    # Push the signed MSI sha1
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        permissions: public-read
        build_variants: ["enterprise-windows-64", "windows-64", "windows-64-2k8", "windows-64-2k8-ssl", "windows-32"]
        local_file: src/mongodb-win32-${push_arch}-${suffix}-signed.msi.sha1
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.sha1

    # Put the binaries tarball sha256
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sha256
        permissions: public-read
        aws_key: ${aws_key}
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sha256

    # Put the source tarball sha256
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-src-${src_suffix}.${ext|tar.gz}.sha256
        permissions: public-read
        aws_key: ${aws_key}
        bucket: build-push-testing
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sha256
        build_variants: [ linux-64, windows-64-2k8 ]

    # Put the debug symbols sha256
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        build_variants: *debug_symbol_variants
        local_file: src/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sha256
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sha256

    # Put the signed MSI sha256
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        build_variants: ["enterprise-windows-64", "windows-64", "windows-64-2k8", "windows-64-2k8-ssl", "windows-32"]
        local_file: src/mongodb-win32-${push_arch}-${suffix}-signed.msi.sha256
        bucket: build-push-testing
        permissions: public-read
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.sha256
        content_type: text/plain

    # Put the binaries tarball md5
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.md5
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.md5

    # Put the source tarball md5
    - command: s3.put
      params:
        aws_secret: ${aws_secret}
        local_file: src/mongodb-src-${src_suffix}.${ext|tar.gz}.md5
        aws_key: ${aws_key}
        bucket: build-push-testing
        permissions: public-read
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.md5
        build_variants: [ linux-64, windows-64-2k8 ]

    # Put the debug symbols md5
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        build_variants: *debug_symbol_variants
        local_file: src/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.md5
        bucket: build-push-testing
        content_type: text/plain
        permissions: public-read
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.md5

    # Put the signed MSI md5
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        build_variants: ["enterprise-windows-64", "windows-64", "windows-64-2k8", "windows-64-2k8-ssl", "windows-32"]
        local_file: src/mongodb-win32-${push_arch}-${suffix}-signed.msi.md5
        bucket: build-push-testing
        permissions: public-read
        content_type: text/plain
        remote_file: ${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.md5

    - command: s3Copy.copy
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        s3_copy_files:
            #Binaries
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}', 'bucket': '${push_bucket}'}}

            #Source tarball
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}', 'bucket': 'build-push-testing'},
               'destination': {'path': 'src/mongodb-src-${src_suffix}.${ext|tar.gz}', 'bucket': '${push_bucket}'},
               'build_variants': [ 'linux-64', 'windows-64-2k8' ]
            }

            #Debug Symbols
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}', 'bucket': '${push_bucket}'},
               'build_variants': *debug_symbol_variants
              }

            #MSI (Windows only)
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-win32-${push_arch}-${suffix}-signed.msi', 'bucket': '${push_bucket}'},
               'build_variants': [ 'enterprise-windows-64', 'windows-64', 'windows-64-2k8', 'windows-64-2k8-ssl', 'windows-32' ] }

            #Binaries Signature
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sig', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sig', 'bucket': '${push_bucket}'}}

            #Debug Symbols Signature
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sig', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sig', 'bucket': '${push_bucket}'},
               'build_variants': *debug_symbol_variants
              }

            #Source tarball signature
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sig', 'bucket': 'build-push-testing'},
               'destination': {'path': 'src/mongodb-src-${src_suffix}.${ext|tar.gz}.sig', 'bucket': '${push_bucket}'},
               'build_variants': [ 'linux-64', 'windows-64-2k8' ]
            }

            #SHA1 for binaries
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sha1', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sha1', 'bucket': '${push_bucket}'}}

            #SHA1 for source tarball
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sha1', 'bucket': 'build-push-testing'},
               'destination': {'path': 'src/mongodb-src-${src_suffix}.${ext|tar.gz}.sha1', 'bucket': '${push_bucket}'},
               'build_variants': [ 'linux-64', 'windows-64-2k8' ]
            }

            #SHA1 for debug symbols
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sha1', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sha1', 'bucket': '${push_bucket}'},
               'build_variants': *debug_symbol_variants
              }

            #SHA1 for MSI
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.sha1', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-win32-${push_arch}-${suffix}-signed.msi.sha1', 'bucket': '${push_bucket}'},
               'build_variants': ['enterprise-windows-64', 'windows-64', 'windows-64-2k8', 'windows-64-2k8-ssl', 'windows-32'] }

            #SHA256 for binaries
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.sha256', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.sha256', 'bucket': '${push_bucket}'}}

            #SHA256 for source tarball
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.sha256', 'bucket': 'build-push-testing'},
               'destination': {'path': 'src/mongodb-src-${src_suffix}.${ext|tar.gz}.sha256', 'bucket': '${push_bucket}'},
               'build_variants': [ 'linux-64', 'windows-64-2k8' ]
            }

            #SHA256 for debugsymbols
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.sha256', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.sha256', 'bucket': '${push_bucket}'},
               'build_variants': *debug_symbol_variants}

            #SHA256 for MSI files
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.sha256', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-win32-${push_arch}-${suffix}-signed.msi.sha256', 'bucket': '${push_bucket}'},
               'build_variants': ['enterprise-windows-64', 'windows-64', 'windows-64-2k8', 'windows-64-2k8-ssl', 'windows-32'], }


            #MD5 for binaries
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-${suffix}-${task_id}.${ext|tgz}.md5', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-${suffix}.${ext|tgz}.md5', 'bucket': '${push_bucket}'}}

            #MD5 for source tarball
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-src-${src_suffix}-${task_id}.${ext|tar.gz}.md5', 'bucket': 'build-push-testing'},
               'destination': {'path': 'src/mongodb-src-${src_suffix}.${ext|tar.gz}.md5', 'bucket': '${push_bucket}'},
               'build_variants': [ 'linux-64', 'windows-64-2k8' ]
            }

            #MD5 for debugsymbols
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}-${task_id}.${ext|tgz}.md5', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-${push_name}-${push_arch}-debugsymbols-${suffix}.${ext|tgz}.md5', 'bucket': '${push_bucket}'},
               'build_variants': *debug_symbol_variants
                }

            #MD5 for MSIs
            - {'source': {'path': '${push_path}-STAGE/${push_name}/mongodb-win32-${push_arch}-${suffix}-${task_id}-signed.msi.md5', 'bucket': 'build-push-testing'},
               'destination': {'path': '${push_path}/mongodb-win32-${push_arch}-${suffix}-signed.msi.md5', 'bucket': '${push_bucket}'},
               'build_variants': ['enterprise-windows-64', 'windows-64', 'windows-64-2k8', 'windows-64-2k8-ssl', 'windows-32'], }
    - command: shell.exec
      params:
        working_dir: src
        script: |
          ssh distro-deb2.build.10gen.cc sudo -H -u ubuntu /home/ubuntu/git/kernel-tools/releases/publish_packages/publish_packages.sh master ${version} ${revision} || true

#######################################
#               Modules               #
#######################################

modules:
- name: enterprise
  repo: git@github.com:10gen/mongo-enterprise-modules.git
  prefix: src/mongo/db/modules
  branch: master

- name: rocksdb
  repo: git@github.com:mongodb-partners/mongo-rocks.git
  prefix: src/mongo/db/modules
  branch: master

#######################################
#            Buildvariants            #
#######################################

buildvariants:

###########################################
#         Linux buildvariants             #
###########################################

- name: linux-64
  display_name: Linux 64-bit
  modules: ~
  run_on:
  - rhel55
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64
    compile_flags: -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ --release
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: lint
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: inMemoryExperiment
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_op_query
  - name: jsCore_op_query_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_legacy
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: linux-64-debug
  display_name: Linux 64-bit DEBUG
  modules: ~
  run_on:
  - rhel55
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux-debug
    push_arch: x86_64
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    compile_flags: --dbg=on --opt=on -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: failpoints_auth
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_legacy
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT

- name: linux-64-duroff
  display_name: Linux 64-bit DUR OFF
  modules: ~
  run_on:
  - rhel55
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux-duroff
    push_arch: x86_64
    compile_flags: -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure --nojournal
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: aggregation
  - name: aggregation_auth
  - name: auth
  - name: dbtest
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: jsCore
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_rs
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthroughWithMongod
  - name: bulk_gle_passthrough
  - name: parallel
  - name: parallel_compatibility
  - name: concurrency
  - name: concurrency_replication
  - name: concurrency_sharded
  - name: replicasets
  - name: replicasets_auth
  - name: replication
  - name: replication_auth
  - name: sharding
  - name: sharding_auth
  - name: slow1
  - name: slow2
  - name: sharding_jscore_passthrough
  - name: tool

- name: linux-64-lsm
  stepback: false
  display_name: Linux 64-bit LSM
  run_on:
  - rhel55
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    compile_flags: -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ --release
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure --wiredTigerCollectionConfig=type=lsm --wiredTigerIndexConfig=type=lsm
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: aggregation_WT
  - name: auth_WT
  - name: dbtest_WT
  - name: gle_auth_WT
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore_WT
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough_WT
  - name: parallel_WT
  - name: parallel_compatibility_WT
  - name: concurrency_WT
  - name: concurrency_replication_WT
  - name: concurrency_sharded_WT
  - name: replicasets_WT
  - name: replication_WT
  - name: sharding_WT
  - name: slow1_WT
  - name: slow2_WT
  - name: sharding_jscore_passthrough_WT
  - name: tool_WT

- name: ubuntu1204
  display_name: SSL Ubuntu 1204 64-bit
  modules: ~
  run_on:
  - ubuntu1204-test
  expansions:
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-ubuntu1204
    compile_flags: --ssl --distmod=ubuntu1204 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - ubuntu1204-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mongosTest
  - name: mmap
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: ubuntu1404
  display_name: SSL Ubuntu 1404 64-bit
  modules: ~
  run_on:
  - ubuntu1404-test
  expansions:
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-ubuntu1404
    compile_flags: --ssl --distmod=ubuntu1404 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - ubuntu1404-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: enterprise-linux-64-amazon-ami
  display_name: Enterprise Linux 64-bit Amazon AMI
  modules:
  - enterprise
  run_on:
  - linux-64-amzn-test
  expansions:
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-amzn64
    compile_flags: --ssl --distmod=amzn64 --release -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - linux-64-amzn-build
  - name: aggregation_auth
  - name: audit
  - name: audit_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: failpoints_auth
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: replicasets_auth
  - name: replication_auth
  - name: sasl
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: amazon
  display_name: SSL Amazon 64-bit
  modules: ~
  run_on:
  - linux-64-amzn-test
  expansions:
    tooltags: "-tags 'ssl'"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-amazon
    compile_flags: --ssl --distmod=amazon -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - linux-64-amzn-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: linux-32
  display_name: Linux 32-bit
  modules: ~
  run_on:
  - rhel55-32
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go32 PATH=/opt/go32/bin:$PATH
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: i686
    compile_flags: --release --distarch=i686 -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ --wiredtiger=off CCFLAGS="-m32" LINKFLAGS="-m32"
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure --storageEngine=mmapv1 -j1  # Avoid starting too many mongod's on 32-bit systems.
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: dbtest
  - name: disk
  - name: jsCore
  - name: jsCore_compatibility
  - name: mmap
  - name: push
    distros:
    - rhel55-test

###########################################
#         Windows buildvariants           #
###########################################

- name: windows-64
  display_name: Windows 64-bit
  modules: ~
  run_on:
  - windows-64-vs2013-test
  expansions:
    exe: ".exe"
    push_path: win32
    push_bucket: downloads.mongodb.org
    push_name: win32
    push_arch: x86_64
    msi_target: msi
    content_type: application/zip
    compile_flags: --release -j$(grep -c ^processor /proc/cpuinfo) VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: windows-64-2k8
  display_name: Windows 64-bit 2008R2+
  modules: ~
  run_on:
  - windows-64-vs2013-test
  expansions:
    exe: ".exe"
    push_path: win32
    push_bucket: downloads.mongodb.org
    push_name: win32
    push_arch: x86_64-2008plus
    msi_target: msi
    content_type: application/zip
    compile_flags: --release --win-version-min=ws08r2 -j$(grep -c ^processor /proc/cpuinfo) --distmod=2008plus VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: windows-64-2k8-debug
  display_name: Windows 64-bit 2008R2+ DEBUG
  modules: ~
  run_on:
  - windows-64-vs2013-test
  expansions:
    exe: ".exe"
    push_path: win32
    push_bucket: downloads.mongodb.org
    push_name: win32-debug
    push_arch: x86_64-2008plus
    content_type: application/zip
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    compile_flags: --dbg=on --opt=on --win-version-min=ws08r2 -j$(grep -c ^processor /proc/cpuinfo) --distmod=2008plus
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: tool
  - name: tool_WT

- name: enterprise-windows-64
  display_name: Enterprise Windows 64-bit
  modules:
  - enterprise
  run_on:
  - windows-64-vs2013-test
  expansions:
    tooltags: "-tags 'ssl sasl'"
    exe: ".exe"
    gorootvars: 'PATH="/cygdrive/c/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin:/cygdrive/c/sasl/:$PATH"'
    push_path: win32
    push_bucket: downloads.10gen.com
    push_name: win32
    push_arch: x86_64-enterprise-windows-64
    msi_target: msi
    content_type: application/zip
    compile_flags: --release --ssl --distmod=windows-64 CPPPATH="c:/openssl/include c:/sasl/include c:/snmp/include" LIBPATH="c:/openssl/lib c:/sasl/lib c:/snmp/lib" -j$(grep -c ^processor /proc/cpuinfo) --dynamic-windows --win-version-min=ws08r2 VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: ese_WT
  - name: jsCore_WT_ese
  - name: replica_sets_WT_ese
  - name: sharding_WT_ese
  - name: jsCore_auth
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: windows-64-2k8-ssl
  display_name: SSL Windows 64-bit 2008R2+
  modules: ~
  run_on:
  - windows-64-vs2013-test
  expansions:
    exe: ".exe"
    gorootvars: 'PATH="/cygdrive/c/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin:/cygdrive/c/sasl/:$PATH"'
    tooltags: "-tags ssl"
    push_path: win32
    push_bucket: downloads.mongodb.org
    push_name: win32
    push_arch: x86_64-2008plus-ssl
    msi_target: msi
    content_type: application/zip
    compile_flags: --release --ssl --distmod=2008plus-ssl CPPPATH="c:/openssl/include" LIBPATH="c:/openssl/lib" -j$(grep -c ^processor /proc/cpuinfo) --dynamic-windows --win-version-min=ws08r2 VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: windows-32
  display_name: Windows 32-bit
  modules: ~
  run_on:
  - windows-32
  expansions:
    exe: ".exe"
    gorootvars: GOARCH=386
    push_path: win32
    push_bucket: downloads.mongodb.org
    push_name: win32
    push_arch: i386
    msi_target: msi
    content_type: application/zip
    compile_flags: --release -j$(grep -c ^processor /proc/cpuinfo) --wiredtiger=off TARGET_ARCH=i386 VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure --storageEngine=mmapv1 -j1  # Avoid starting too many mongod's on 32-bit systems.
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: dbtest
  - name: disk
  - name: jsCore
  - name: jsCore_compatibility
  - name: mmap
  - name: push
    distros:
    - rhel55-test

###########################################
#             OSX buildvariants           #
###########################################

- name: osx-108
  display_name: OS X 10.8
  modules: ~
  run_on:
  - osx-108
  expansions:
    push_path: osx
    push_bucket: downloads.mongodb.org
    push_name: osx
    push_arch: x86_64
    compile_flags: --allocator=system -j$(sysctl -n hw.logicalcpu) --release --osx-version-min=10.7 --libc++
    num_cores: $(sysctl -n hw.logicalcpu)
    num_jobs_unittests: $(sysctl -n hw.logicalcpu)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: osx-108-ssl
  display_name: SSL OS X 10.8
  modules: ~
  run_on:
  - osx-108
  expansions:
    push_path: osx
    push_bucket: downloads.mongodb.org
    push_name: osx-ssl
    push_arch: x86_64
    tooltags: "-tags ssl"
    compile_flags: --ssl --allocator=system -j$(sysctl -n hw.logicalcpu) --release --osx-version-min=10.7 --libc++
    num_cores: $(sysctl -n hw.logicalcpu)
    num_jobs_unittests: $(sysctl -n hw.logicalcpu)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: osx-108-debug
  display_name: OS X 10.8 DEBUG
  modules: ~
  run_on:
  - osx-108
  expansions:
    push_path: osx
    push_bucket: downloads.mongodb.org
    push_name: osx-debug
    push_arch: x86_64
    num_cores: $(sysctl -n hw.logicalcpu)
    num_jobs_unittests: $(sysctl -n hw.logicalcpu)
    test_flags: --continueOnFailure
    compile_flags: --dbg=on --opt=on --allocator=system -j$(sysctl -n hw.logicalcpu) --osx-version-min=10.7 --libc++
  tasks:
  - name: compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: mmap
  - name: mongosTest
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_WT
  - name: tool
  - name: tool_WT

###########################################
#          Redhat buildvariants           #
###########################################

- name: enterprise-rhel-57-64-bit
  display_name: Enterprise RHEL 5.7 64-bit
  modules:
  - enterprise
  run_on:
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel57
    compile_flags: --ssl --distmod=rhel57 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: lint
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: enterprise-rhel-62-64-bit
  display_name: Enterprise RHEL 6.2 64-bit
  modules:
  - enterprise
  run_on:
  - rhel62-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel62
    rlp_environment: MONGOD_UNITTEST_RLP_LANGUAGE_TEST_BTROOT=/opt/basis
    compile_flags: --ssl --distmod=rhel62 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ CPPPATH="/opt/basis/rlp/rlp/include /opt/basis/rlp/utilities/include" --use-basis-tech-rosette-linguistics-platform=on
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel62-build
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: ese_WT
  - name: jsCore_WT_ese
  - name: jstestfuzz
  - name: replica_sets_WT_ese
  - name: sharding_WT_ese
  - name: mmap
  - name: jsCore_auth
  - name: replicasets_auth
  - name: rlp
  - name: rlp_WT
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: enterprise-rhel-70-64-bit
  display_name: Enterprise RHEL 7.0 64-bit
  modules:
  - enterprise
  run_on:
  - rhel70
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel70
    compile_flags: --ssl --distmod=rhel70 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: rhel55
  display_name: SSL RHEL 5.5 64-bit
  modules: ~
  run_on:
  - rhel55
  - rhel55-test
  expansions:
    gitvars: LD_LIBRARY_PATH=/opt/openssl/lib64 #needed to workaround the old openSSL on rhel55 builders.
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel55
    compile_flags: --ssl --distmod=rhel55 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel55
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: rhel62
  display_name: SSL RHEL 6.2 64-bit
  modules: ~
  run_on:
  - rhel62-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel62
    compile_flags: --ssl --distmod=rhel62 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel62-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: rhel70
  display_name: SSL RHEL 7.0 64-bit
  modules: ~
  run_on:
  - rhel70
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel70
    compile_flags: --ssl --distmod=rhel70 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - rhel70
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

###########################################
#          Ubuntu buildvariants           #
###########################################

- name: enterprise-ubuntu1204-64
  display_name: Enterprise Ubuntu 1204 64-bit
  modules:
  - enterprise
  run_on:
  - ubuntu1204-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-ubuntu1204
    compile_flags: --ssl --distmod=ubuntu1204 --release -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - ubuntu1204-build
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: enterprise-ubuntu1404-64
  display_name: Enterprise Ubuntu 1404 64-bit
  modules:
  - enterprise
  run_on:
  - ubuntu1404-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-ubuntu1404
    compile_flags: --ssl --distmod=ubuntu1404 --release -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - ubuntu1404-build
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

###########################################
#          SUSE buildvariants             #
###########################################

- name: enterprise-suse11-64
  display_name: Enterprise SUSE 11 64-bit
  modules:
  - enterprise
  run_on:
  - suse11-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-suse11
    compile_flags: --ssl --distmod=suse11 --release -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - suse11-build
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: mmap
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: suse11
  display_name: SSL SUSE 11 64-bit
  modules: ~
  run_on:
  - suse11-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-suse11
    compile_flags: --ssl --distmod=suse11 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - suse11-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

###########################################
#          Solaris buildvariants          #
###########################################

- name: solaris-64-bit
  display_name: Solaris 64-bit
  modules: ~
  run_on:
  - solaris
  expansions:
    push_path: sunos5
    push_bucket: downloads.mongodb.org
    push_name: sunos5
    push_arch: x86_64
    compile_flags: CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ -j$(kstat cpu | sort -u | grep -c "^module") --release CCFLAGS="-m64" LINKFLAGS="-m64 -static-libstdc++ -static-libgcc" OBJCOPY=/opt/mongodbtoolchain/bin/objcopy
    num_cores: $(kstat cpu | sort -u | grep -c "^module")
    num_jobs_unittests: $(kstat cpu | sort -u | grep -c "^module")
    test_flags: --continueOnFailure
  tasks:
  - name: compile
  - name: aggregation
  - name: aggregation_WT
  - name: auth
  - name: auth_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: jsCore
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jsCore_small_oplog_WT
  - name: jsCore_WT
  - name: mmap
  - name: mongosTest
  - name: noPassthrough
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: noPassthrough_WT
  - name: parallel
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: parallel_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replication
  - name: replication_WT
  - name: sharding
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: sharding_WT
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

###########################################
#          Debian buildvariants           #
###########################################

- name: enterprise-debian71-64
  display_name: Enterprise Debian 7.1 64-bit
  modules:
  - enterprise
  run_on:
  - debian71-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags 'ssl sasl'"
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-debian71
    compile_flags: --ssl --distmod=debian71 --release -j$(grep -c ^processor /proc/cpuinfo) CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - debian71-build
  - name: audit
  - name: audit_WT
  - name: dbtest
  - name: dbtest_WT
  - name: jsCore_auth
  - name: jstestfuzz
  - name: mmap
  - name: replicasets_auth
  - name: sasl
  - name: sharding_auth
  - name: snmp
  - name: snmp_WT
  - name: ssl
  - name: sslSpecial
  - name: push
    distros:
    - rhel55-test

- name: debian71
  display_name: SSL Debian 7.1 64-bit
  modules: ~
  run_on:
  - debian71-test
  expansions:
    gorootvars: GOROOT=/opt/go PATH="/opt/go/bin:$PATH"
    tooltags: "-tags ssl"
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-debian71
    compile_flags: --ssl --distmod=debian71 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
  tasks:
  - name: compile
    distros:
    - debian71-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

##############################################
# mongo-partner storage engine buildvariants #
##############################################

- name: ubuntu1404-rocksdb
  display_name: Ubuntu 14.04 64-bit (RocksDB)
  modules:
  - rocksdb
  run_on:
  - ubuntu1404-test
  expansions:
    build_rocksdb: true
    compile_flags: -j$(grep -c ^processor /proc/cpuinfo) --dbg=off --opt=on CPPPATH=$(readlink -f ../rocksdb/include/) LIBPATH=$(readlink -f ../rocksdb/) LIBS=rocksdb CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++ VARIANT_DIR=release
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure --storageEngine=rocksdb
  tasks:
  - name: compile
    distros:
    - ubuntu1404-build
  # - name: lint
  - name: aggregation
  - name: aggregation_auth
  - name: auth
  - name: dbtest
  # - name: disk
  # - name: durability
  # - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_write_cmd
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: jsCore
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_rs
  - name: jstestfuzz
  - name: noPassthrough
  - name: noPassthroughWithMongod
  - name: bulk_gle_passthrough
  - name: parallel
  - name: parallel_compatibility
  - name: concurrency
  - name: concurrency_replication
  - name: concurrency_sharded
  - name: replicasets
  - name: replicasets_auth
  - name: replication
  - name: replication_auth
  - name: sharding
  - name: sharding_auth
  - name: slow1
  - name: slow2
  - name: sharding_jscore_passthrough

###########################################
#     Experimental buildvariants          #
###########################################

- name: ubuntu1410-debug-asan
  display_name: z ASAN SSL Ubuntu 1410 64-bit DEBUG
  run_on:
  - ubuntu1410-build
  stepback: false
  batchtime: 1440 # 3.5 days
  expansions:
    tooltags: "-tags 'ssl'"
    asan_symbolizer: ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-3.5
    enable_lsan: LSAN_OPTIONS="suppressions=etc/lsan.suppressions" ASAN_OPTIONS=detect_leaks=1
    compile_flags: CC=/usr/bin/clang CXX=/usr/bin/clang++ --dbg=on --opt=on --allocator=system --sanitize=address --ssl -j$(grep -c ^processor /proc/cpuinfo) --nostrip VARIANT_DIR=build
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: -j1 --continueOnFailure  # Avoid starting too many mongod's under ASAN build.
  tasks:
  - name: compile
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT

- name: ubuntu1410-fast-clang
  display_name: z Clang/libc++ Ubuntu 1410 64-bit SSL
  run_on:
  - ubuntu1410-test
  stepback: false
  expansions:
    tooltags: "-tags 'ssl'"
    compile_flags: CC=/usr/bin/clang CXX=/usr/bin/clang++ --libc++ --ssl -j$(grep -c ^processor /proc/cpuinfo) VARIANT_DIR=build --distmod=ubuntu1410-clang
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: --continueOnFailure
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-ubuntu1410-clang
  tasks:
  - name: compile
    distros:
    - ubuntu1410-build
  - name: aggregation
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth
  - name: auth_WT
  - name: dbtest
  - name: dbtest_WT
  - name: disk
  - name: durability
  - name: dur_jscore_passthrough
  - name: failpoints
  - name: failpoints_auth
  - name: gle_auth
  - name: gle_auth_WT
  - name: gle_auth_write_cmd
  - name: gle_auth_write_cmd_WT
  - name: gle_auth_basics_passthrough
  - name: gle_auth_basics_passthrough_WT
  - name: gle_auth_basics_passthrough_write_cmd
  - name: gle_auth_basics_passthrough_write_cmd_WT
  - name: sharding_gle_auth_basics_passthrough
  - name: sharding_gle_auth_basics_passthrough_WT
  - name: sharding_gle_auth_basics_passthrough_write_cmd
  - name: sharding_gle_auth_basics_passthrough_write_cmd_WT
  - name: jsCore
  - name: jsCore_WT
  - name: jsCore_auth
  - name: jsCore_compatibility
  - name: jsCore_compatibility_WT
  - name: jsCore_small_oplog
  - name: jsCore_small_oplog_WT
  - name: jsCore_small_oplog_rs
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mmap
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough
  - name: bulk_gle_passthrough_WT
  - name: parallel
  - name: parallel_WT
  - name: parallel_compatibility
  - name: parallel_compatibility_WT
  - name: concurrency
  - name: concurrency_WT
  - name: concurrency_replication
  - name: concurrency_replication_WT
  - name: concurrency_sharded
  - name: concurrency_sharded_WT
  - name: replicasets
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication
  - name: replication_WT
  - name: replication_auth
  - name: sharding
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1
  - name: slow1_WT
  - name: slow2
  - name: slow2_WT
  - name: sharding_jscore_passthrough
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool
  - name: tool_WT
  - name: push
    distros:
    - rhel55-test

- name: ubuntu1404-asio
  display_name: z ASIO SSL Ubuntu 1404 64-bit
  modules: ~
  run_on:
  - ubuntu1404-test
  expansions:
    tooltags: "-tags ssl"
    compile_flags: --ssl --distmod=ubuntu1404 -j$(grep -c ^processor /proc/cpuinfo) --release CC=/opt/mongodbtoolchain/bin/gcc CXX=/opt/mongodbtoolchain/bin/g++
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: "--continueOnFailure --mongosSetParameters='{outboundNetworkImpl: 'ASIO'}' --mongodSetParameters='{outboundNetworkImpl: 'ASIO'}'"
  tasks:
  - name: compile
    distros:
    - ubuntu1404-build
  - name: aggregation_WT
  - name: aggregation_auth
  - name: auth_WT
  - name: jsCore_small_oplog_rs_WT
  - name: jstestfuzz
  - name: mongosTest
  - name: multiversion
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough_WT
  - name: concurrency_replication_WT
  - name: concurrency_sharded_WT
  - name: replicasets_WT
  - name: replicasets_auth
  - name: replication_WT
  - name: replication_auth
  - name: sharding_WT
  - name: sharding_auth
  - name: slow1_WT
  - name: slow2_WT
  - name: sharding_jscore_passthrough_WT
  - name: ssl
  - name: sslSpecial
  - name: tool_WT

- name: windows-64-2k8-ssl-asio
  display_name: z ASIO SSL Windows 64-bit 2008R2+
  modules: ~
  run_on:
  - windows-64-vs2013-test
  expansions:
    exe: ".exe"
    gorootvars: 'PATH="/cygdrive/c/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin:/cygdrive/c/sasl/:$PATH"'
    tooltags: "-tags ssl"
    msi_target: msi
    content_type: application/zip
    compile_flags: --release --ssl --distmod=2008plus-ssl CPPPATH="c:/openssl/include" LIBPATH="c:/openssl/lib" -j$(grep -c ^processor /proc/cpuinfo) --dynamic-windows --win-version-min=ws08r2 VARIANT_DIR=win32
    num_cores: $(grep -c ^processor /proc/cpuinfo)
    num_jobs_unittests: $(grep -c ^processor /proc/cpuinfo)
    test_flags: "--continueOnFailure --mongosSetParameters='{outboundNetworkImpl: 'ASIO'}' --mongodSetParameters='{outboundNetworkImpl: 'ASIO'}'"
    ext: zip
  tasks:
  - name: compile
    distros:
    - windows-64-vs2013-compile
  - name: aggregation_WT
  - name: auth_WT
  - name: dbtest_WT
  - name: jsCore_small_oplog_rs_WT
  - name: mongosTest
  - name: noPassthrough_WT
  - name: noPassthroughWithMongod_WT
  - name: bulk_gle_passthrough_WT
  - name: concurrency_replication_WT
  - name: concurrency_sharded_WT
  - name: replicasets_WT
  - name: replication_WT
  - name: sharding_WT
  - name: slow1_WT
  - name: slow2_WT
  - name: sharding_jscore_passthrough_WT
  - name: tool_WT
  - name: ssl
  - name: sslSpecial
